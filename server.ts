// server.ts

import express, { Request, Response } from "express";
import cors from "cors";
import dotenv from "dotenv";

// 1. –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
dotenv.config(); 

// 2. –ò–º–ø–æ—Ä—Ç —Ä–æ—É—Ç–æ–≤ –∏ —Å–µ—Ä–≤–∏—Å–æ–≤
// –¢–µ–ø–µ—Ä—å –∏–º–ø–æ—Ä—Ç—ã —Å—Å—ã–ª–∞—é—Ç—Å—è –Ω–∞ .ts —Ñ–∞–π–ª—ã (–∏–ª–∏ –æ–∂–∏–¥–∞–µ—Ç—Å—è, —á—Ç–æ –æ–Ω–∏ –±—É–¥—É—Ç —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω—ã –∏–∑ .ts),
// –ø–æ—ç—Ç–æ–º—É —Å—É—Ñ—Ñ–∏–∫—Å .js —É–¥–∞–ª–µ–Ω.
import tokenRoutes from "./src/token.routes"; 
import * as solanaService from "./src/solana.service"; 

const app = express();
// –ü–æ—Ä—Ç –±–µ—Ä–µ—Ç—Å—è –∏–∑ .env, –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è 3000 –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
const PORT = process.env.PORT || 3000; 

// === Middlewares ===
// –†–∞–∑—Ä–µ—à–∞–µ–º –≤—Å–µ CORS-–∑–∞–ø—Ä–æ—Å—ã –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏
app.use(cors({ origin: "*" })); 
app.use(express.json());

// === –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–¥–æ—Ä–æ–≤—å—è —Å–µ—Ä–≤–µ—Ä–∞ ===
app.get("/", (req: Request, res: Response) => {
    res.status(200).json({ 
        status: "OK", 
        message: "Solana Token Backend –∑–∞–ø—É—â–µ–Ω.",
        port: PORT
    });
});

// === –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —Ä–æ—É—Ç–æ–≤ ===
// –í—Å–µ —Ä–æ—É—Ç—ã –∏–∑ token.routes.ts –±—É–¥—É—Ç –¥–æ—Å—Ç—É–ø–Ω—ã –ø–æ /api/...
app.use("/api", tokenRoutes); 

// === –ó–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞ ===
app.listen(PORT, () => {
    // –í –∫–æ–Ω—Å–æ–ª—å –±—É–¥–µ—Ç –≤—ã–≤–µ–¥–µ–Ω –∞–¥—Ä–µ—Å —Å–µ—Ä–≤–∏—Å–Ω–æ–≥–æ –∫–æ—à–µ–ª—å–∫–∞ (–µ—Å–ª–∏ –æ–Ω –ø—Ä–∞–≤–∏–ª—å–Ω–æ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ .env)
    console.log(`üöÄ Backend –∑–∞–ø—É—â–µ–Ω –Ω–∞ –ø–æ—Ä—Ç—É ${PORT}`);
    // –ó–¥–µ—Å—å solanaService.ts –≤—ã–ø–æ–ª–Ω—è–µ—Ç —Å–≤–æ—é –Ω–∞—á–∞–ª—å–Ω—É—é –ª–æ–≥–∏–∫—É
});
