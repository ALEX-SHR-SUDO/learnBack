// src/umi-initializer.js

import { createUmi, createSignerFromKeypair } from '@metaplex-foundation/umi';
import { mplTokenMetadata } from '@metaplex-foundation/mpl-token-metadata';
import * as Umi from '@metaplex-foundation/umi'; 
import { loadServiceWallet } from "./service-wallet.js"; 

let umiInstance;

/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Umi (ASYNC).
 * @returns {Promise<Umi.Umi | undefined>} –ò–Ω—Å—Ç–∞–Ω—Ü–∏—è Umi
 */
export async function initializeUmi() {
    if (umiInstance) return umiInstance;
    
    try {
        const serviceWallet = loadServiceWallet();
        if (!serviceWallet) {
            throw new Error("–°–µ—Ä–≤–∏—Å–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SERVICE_SECRET_KEY.");
        }
        
                // --- –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –ê–¥–∞–ø—Ç–µ—Ä–∞ ---
        const web3jsAdapters = await import('@metaplex-foundation/umi-web3js-adapters');
        
        // üí• –§–ò–ù–ê–õ–¨–ù–´–ô –û–ë–•–û–î V2: –ê–≥—Ä–µ—Å—Å–∏–≤–Ω–æ –∏—â–µ–º –ø–ª–∞–≥–∏–Ω –≤ –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–º —Ä–∞–±–æ—á–µ–º –≤–∏–¥–µ
        let adapterPlugin = (web3jsAdapters.web3Js || 
                             web3jsAdapters.default); // –ù–∞—á–Ω–µ–º —Å –Ω–∞–∏–±–æ–ª–µ–µ –≤–µ—Ä–æ—è—Ç–Ω—ã—Ö –º–µ—Å—Ç

        // 1. –ï—Å–ª–∏ —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è, –≤—ã–∑—ã–≤–∞–µ–º –µ–µ, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –æ–±—ä–µ–∫—Ç-–ø–ª–∞–≥–∏–Ω.
        if (typeof adapterPlugin === 'function') {
            adapterPlugin = adapterPlugin();
        }

        // 2. –ï—Å–ª–∏ –ø–ª–∞–≥–∏–Ω –≤—Å–µ –µ—â–µ undefined –∏–ª–∏ –Ω–µ –∏–º–µ–µ—Ç install, 
        // –∏—â–µ–º –≤ web3jsAdapters.default (–Ω–∞ —Å–ª—É—á–∞–π, –µ—Å–ª–∏ adapterPlugin –±—ã–ª null/undefined)
        if (!adapterPlugin) {
            adapterPlugin = web3jsAdapters.default;
        }

        // 3. –°–ê–ú–´–ô –í–ê–ñ–ù–´–ô –®–ê–ì: –ü—Ä–æ–≤–µ—Ä–∫–∞ –î–í–û–ô–ù–û–ì–û DEFAULT –∏–ª–∏ –æ–±–µ—Ä–Ω—É—Ç–æ–≥–æ –æ–±—ä–µ–∫—Ç–∞
        if (adapterPlugin && adapterPlugin.default) {
            // –ï—Å–ª–∏ –æ–±—ä–µ–∫—Ç –æ–±–µ—Ä–Ω—É—Ç –µ—â–µ —Ä–∞–∑ (Node.js/CJS quirk), –∏—Å–ø–æ–ª—å–∑—É–µ–º –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π default
            adapterPlugin = adapterPlugin.default;
        }

        // 4. –ï—Å–ª–∏ –ø–ª–∞–≥–∏–Ω ‚Äî —ç—Ç–æ —Ñ—É–Ω–∫—Ü–∏—è –ø–æ—Å–ª–µ —à–∞–≥–∞ 3, –≤—ã–∑—ã–≤–∞–µ–º –µ–≥–æ –µ—â–µ —Ä–∞–∑ (—ç—Ç–æ —Ä–µ–¥–∫–æ—Å—Ç—å, –Ω–æ –Ω—É–∂–Ω–æ –¥–ª—è –ø–æ–∫—Ä—ã—Ç–∏—è)
        if (typeof adapterPlugin === 'function') {
            adapterPlugin = adapterPlugin();
        }


        // –§–ò–ù–ê–õ–¨–ù–ê–Ø –ü–†–û–í–ï–†–ö–ê:
        if (!adapterPlugin || typeof adapterPlugin.install !== 'function') {
             // –ï—Å–ª–∏ –∏ —ç—Ç–æ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–æ, –∑–Ω–∞—á–∏—Ç, –ø–ª–∞–≥–∏–Ω –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω.
             throw new Error(`Web3Js adapter not correctly resolved. Plugin missing 'install' after all attempts. Resolved type: ${typeof adapterPlugin}.`);
        }
        // ...
        
        // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π –ø–ª–∞–≥–∏–Ω
        umiInstance.use(adapterPlugin);
        
        // ‚úÖ –§–ò–ö–° SIGNER IDENTITY (—Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É eddsa)
        const serviceSigner = createSignerFromKeypair(umiInstance, serviceWallet);
        umiInstance.use(Umi.signerIdentity(serviceSigner)); 

        umiInstance.use(mplTokenMetadata());
        // -------------------------

        return umiInstance;
    } catch (err) {
        console.error(`‚ùå Umi Initializer: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Umi. –ü—Ä–∏—á–∏–Ω–∞: ${err.message}`);
        return undefined;
    }
}