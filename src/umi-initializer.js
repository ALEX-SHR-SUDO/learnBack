// src/umi-initializer.js

import { createUmi, createSignerFromKeypair } from '@metaplex-foundation/umi';
import { mplTokenMetadata } from '@metaplex-foundation/mpl-token-metadata';
import * as web3jsAdapters from '@metaplex-foundation/umi-web3js-adapters'; // ‚úÖ –ù–û–í–´–ô –ò–ú–ü–û–†–¢
import * as Umi from '@metaplex-foundation/umi'; 
import { loadServiceWallet } from "./service-wallet.js"; 

let umiInstance;

export async function initializeUmi() {
    if (umiInstance) return umiInstance;
    
    try {
        const serviceWallet = loadServiceWallet();
        if (!serviceWallet) {
            throw new Error("–°–µ—Ä–≤–∏—Å–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω.");
        }
        
        // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Umi —Å –ø—Ä—è–º–æ–π —Ñ—É–Ω–∫—Ü–∏–µ–π ---
        umiInstance = createUmi('https://api.devnet.solana.com');  
        
        // üí• –§–ò–ù–ê–õ–¨–ù–´–ô –§–ò–ö–°: –Ø–≤–Ω–æ –¥–æ–±–∞–≤–ª—è–µ–º –∞–¥–∞–ø—Ç–µ—Ä –∏ –ø–ª–∞–≥–∏–Ω—ã.
        // EDDSA —è–≤–ª—è–µ—Ç—Å—è —á–∞—Å—Ç—å—é –±–∞–∑–æ–≤–æ–≥–æ Umi, –∏ —ç—Ç–æ –Ω–∞—à –ø–æ—Å–ª–µ–¥–Ω–∏–π —à–∞–Ω—Å, —á—Ç–æ –æ–Ω —Å—Ä–∞–±–æ—Ç–∞–µ—Ç.

        // 1. –ê–¥–∞–ø—Ç–µ—Ä (–∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ .default, —á—Ç–æ–±—ã –æ–±–æ–π—Ç–∏ CJS/ESM)
        umiInstance.use(web3jsAdapters.web3Js || web3jsAdapters.default); 

        // 2. –ò–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä (Signer Identity)
        const serviceSigner = createSignerFromKeypair(umiInstance, serviceWallet);
        umiInstance.use(Umi.signerIdentity(serviceSigner)); 

        // 3. –ü–ª–∞–≥–∏–Ω –º–µ—Ç–∞–¥–∞–Ω–Ω—ã—Ö
        umiInstance.use(mplTokenMetadata());
        
        return umiInstance;
    } catch (err) {
        console.error(`‚ùå Umi Initializer: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Umi. –ü—Ä–∏—á–∏–Ω–∞: ${err.message}`);
        return undefined;
    }
}