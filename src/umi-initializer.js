// src/umi-initializer.js

// ‚úÖ –î–û–ë–ê–í–õ–ï–ù –ò–ú–ü–û–†–¢ –î–õ–Ø EDDSA
import { eddsa } from '@metaplex-foundation/umi-signer-eddsa'; 
// ‚úÖ –ò–°–ü–û–õ–¨–ó–£–ï–ú –ë–ê–ù–î–õ, –∫–æ—Ç–æ—Ä—ã–π –≤–∫–ª—é—á–∞–µ—Ç –∞–¥–∞–ø—Ç–µ—Ä web3.js
import { createUmi as createUmiBundle } from '@metaplex-foundation/umi-bundle-defaults'; 
import { createSignerFromKeypair } from '@metaplex-foundation/umi';
import { mplTokenMetadata } from '@metaplex-foundation/mpl-token-metadata';
import * as Umi from '@metaplex-foundation/umi'; 
import { loadServiceWallet } from "./service-wallet.js"; 

let umiInstance;

/**
 * –¶–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ Umi (ASYNC).
 * @returns {Promise<Umi.Umi | undefined>} –ò–Ω—Å—Ç–∞–Ω—Ü–∏—è Umi
 */
export async function initializeUmi() {
    if (umiInstance) return umiInstance;
    
    try {
        const serviceWallet = loadServiceWallet();
        if (!serviceWallet) {
            throw new Error("–°–µ—Ä–≤–∏—Å–Ω—ã–π –∫–æ—à–µ–ª–µ–∫ –Ω–µ –∑–∞–≥—Ä—É–∂–µ–Ω. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ SERVICE_SECRET_KEY.");
        }
        
        // --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Umi —Å –ø–æ–º–æ—â—å—é Bundled-—Ñ—É–Ω–∫—Ü–∏–∏ ---
        umiInstance = createUmiBundle('https://api.devnet.solana.com');  
        
        // üí• –§–ò–ö–°: –Ø–í–ù–û –î–û–ë–ê–í–õ–Ø–ï–ú –ü–õ–ê–ì–ò–ù EDDSA (–¥–ª—è —É—Å—Ç—Ä–∞–Ω–µ–Ω–∏—è –æ—à–∏–±–∫–∏ generateKeypair)
        umiInstance.use(eddsa());

        // ‚úÖ –§–ò–ö–° SIGNER IDENTITY (—Ä–µ—à–∞–µ—Ç –ø—Ä–æ–±–ª–µ–º—É eddsa)
        const serviceSigner = createSignerFromKeypair(umiInstance, serviceWallet);
        umiInstance.use(Umi.signerIdentity(serviceSigner)); 

        umiInstance.use(mplTokenMetadata());
        // -------------------------

        return umiInstance;
    } catch (err) {
        console.error(`‚ùå Umi Initializer: –ù–µ —É–¥–∞–ª–æ—Å—å –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å Umi. –ü—Ä–∏—á–∏–Ω–∞: ${err.message}`);
        return undefined;
    }
}